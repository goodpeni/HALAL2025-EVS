<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnBack.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAfQAAAH0CAIAAABEtEjdAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAAFQVJREFUeF7t3OmSHcWZh/G8CWsXILGa1QMSvp1ug22MFwxoX5CEQFiAACEJBDYY
        2+Px2IyXucOJN7PqnDxdzYQ/dr7xi/jHw1PPqc/ZGQV2efHLf/3wt//bxjnnPIeX+Ef3zDnnPIGXdtIj
        ImImlh9++a8wRERMxPLiF/9cP3POOU/h8VnmxS/+GWzjnHM+vs839/bMOec8hcfhbmZmyVZOfvGP1QPn
        nPMcHjf3/vnF73hP13VdH6iXk/fDEBExE8uL9/8RhoiIiVhO3v/79PzFPzjnnOfw+Cxz8v7fK9s455wP
        7+Xk59UQETER47NM2HK6ri+n64P0cuLz/zn5+d+D9yvD4w1d13V93B6fZdrzyVWdD35d13V90F5OfFZ/
        Q0TERIzPMic+m3ayeU9d13V9wF5OfPbtybBv6xvf1jq5ruu6PmiPzzKr3xARMQfLiXvVEBExEeOzTDVE
        RMzD8sK9v524923wswV1Xdf1MXs5ce9v6+eZJ4K6ruv6qL28cLcaIiImYnyWeeFuHPaIiJiG5YW7f632
        17jPc845T+H1cI/VyjnnPIWXF+6EPV/JOec8h9ebexgiIuZhef7Of79w96+IiJiJcbiH3YlnzjnnObw8
        /2m14FzXRdd1XR+yTzf32KezcM45H9zL85/+pdpf4i/A7D11Xdf14Xo93GO1cs45T+HlP6pV/mXy253r
        uq7rA/bVzb1VzjnnGbz8x+3/CkNExESMwz3sdjxzzjnP4fXmXu35rnLOOR/ap5u7mZllWvnBJ38Oq+Sc
        c57DS/wjVp8555yn8Hpz/6Se95/8eUFd13V9yB4398VviIg4NssPPv7PMERETMQ43GP1ua39puu6ro/b
        6819lTbf0HVd1wft883dzMwSrTz30Z/CKjnnnOfwEv9YPX/0p/Vvuq7r+rC93dzrb9MbnHPOh/e4ua8r
        IiKmYHnu1h/DEBExEeNwj31UOXn8puu6ro/b6+He3kBExCycb+5mZpZo5dkP//DcrT8iImImludu/aHa
        H56r5JxznsDbzX16RkTEHCzPfRjWxjnnPIeXZz/4JuyDb6I2fji5ruu6Pmgvz374TX3eZJuu67o+Zm83
        993eQ0TEYVkPdzMzy7XyzPu/f/aDb575oJJzznkKL89+8Pv6PI1zznkCbzf36RkREXMwDnczM0u28szN
        r6t9/ez7v+ecc57DyzPvf12f53HOOR/f283966dvfrWqT7ffdF3X9WF7PdynfdV5P13Xl9P1Pd3L07+J
        3+Kkv/k155zzHF6evvlVff4qhHPOeQpvN/f5eeLvFkXXdV0fqcfhPu93nHPOc3iZnzf4zKLouq7rA/V2
        uJuZWaqVp96Lfzz13m8rOeecZ/Dy9Hu/a4vn2Z/uXNd1XR+ul/ZbsJ33nHPOx/c43OtzkHPOeQ4vT92o
        duPLSs455xm83txvtH25QV3XdX3YXp7cqGvXdV3Xx+2l/mBmZqlWnnz3i6dufDkz0mbRdV3Xx+txcw97
        9zve03Vd1wfs9ea+foNzznkGj8O9PgeX03V9OV3f+708+c79sHfuR+Wcc57C6819roiImIPl++/cf/Kd
        6Tl8/k3XdV0ft8dnmfq8y3RdX07Xh+jl+9c/j2dEREzEenNfVEREHJpu7oiICRmHu5mZJVv5/tufhSEi
        YiLWm/uiIiLi0CxPVOvZftN1XdfH7fFZJmwe55zzBF6euHYvnhvf7lzXdV0ftreb+70nuvc455yP7ps3
        9+C9RdF1XdcH63G4m5lZspUnrt2thoiIedhu7jsrIiIOzfL41btPXLtbeW9BXdd1fchenrhabR7nnPME
        Xh6/eqc+IyJiHsZnmcev3kFExEwsj1+5Ew9X6nnPOec8hdfD3czMcq08fuXTx6/ceaySc855Dm8393Wt
        bNN1XddH7eWxtyJV3uGcc57D43BfP3eu67quj9vLY2/drr/NjLpZdF3X9dF6u7nfnte8p67ruj5eL49d
        rna5nvecc85TeD3c52fOOec5vDx6+ZPH3rodvFzJOed8fG8390/mTd5+03Vd1wft5dFLtQZvc845z+Fx
        uK+eOeec5/Dy6KWPqyEiYh7G4d4t6m7TdX05Xd+7vTx6sVrwE8455zm83tzXz4iImIHlkYsfPXrpY0RE
        zMTy6MWPwhARMRHLIxeqBT+ePH6bXdd1XR+wx2eZRy7EDyu293Rd1/Vxe3nkwq2oF27V58l76rqu68P1
        ONzNzCzZysPnVw8fdX5L13VdH7fXm3v3G+ec8wReHj7/YT3vERExD8sj5z8MQ0TERCwPn+ue135L13Vd
        H7fHZ5mHz8XDNM455+N7efjcB/V5Yv07sFF0Xdf14Xo93M3MLNfK8bPrB8455zk8bu7H54ed7+m6rutj
        9nL87Pv1N0REzMPy8Nn3j8/jnHOew8vxszfb8wbPva/ruq6P2+OzzPGzN1eH/eZ0XV9O1wfo5fiZaoiI
        mIj1cDczs1wrx8785viZm8fipL/JOec8h8fNvT23cc45T+Dl2OkwRETMxPgsc+z0PM455ym8HDv9XrPj
        UTnnnGfw+Cyzeuacc57Dy7FTYQ9VNu+p67quj9jrZ5lT85r31HVd1wfs5aFTN46deq+e9O9xzjnP4fFZ
        Zv3MOec8hZeH3qyGiIiJGJ9lHnrzBiIiZmJ56M134yFO+hvhtU6u67quj9njs8zqmXPOeQ4vD74RhoiI
        mVg/y4S9W58n76nruq4P18uDb7yzeoNzznkOj88y8Rxs45xzPryXB1+vhoiIiRifZR58/R1ERMzE8uDr
        17tnzjnnGTw+y8RzsI1zzvnwXh6o9sCvKznnnKfw+CxTn6/X52lT0XVd18fs5YFfv716g3POeQ4vD/y6
        Pgfbmr+t67quj9vrzb37DREREzAOdzMzS7Zy9LVrYZWzxw+6ruv6uL1Eeu3agm26ruv6kL3e3F+r5z0i
        ImZheeC1a9UQETEPy9FfXQ1DRMRELEd/FXa0Pk/eU9d1XR+w15v78rdKXdd1fdAeh7uZmSVbOfLLK2GV
        nHPOc3g5+ssr6+dfdr/puq7rw/Z6c2+/zW/sLLqu6/pofbq5t02nfkdd13V9xF6O/OKteEZExESMwz1W
        nznnnOfweri32vMXi6Lruq6P0+ebu5mZJVo5/PPLR37xFiIiZmI58vPLzY4EO9d1XdeH7f3NfaoL6rqu
        64P1ONxXa6f+crquL6fre7mXw69eCnv1UrzBOec8hZfDP7+0euacc57D1zf373qDc875cF4PdzMzy7Vy
        6GcXD796aYOvLoqu67o+VC+HX73Y/Tb54c51Xdf14Xq7ubfnue4suq7r+mA9DnczM0u2cuiVC9UuHP7Z
        Rc455zm8HPrZhdUz55zzHF4OVqu8sKCu67o+ZK+fZczMLNfKwZ+eP/TKhYOvVHLOOU/h5eAr51fPnHPO
        c3i7ubdnRERMwjjczcws2crBn56rVvmTznVd1/VhezvcV8/nuvd0Xdf1UXs5EPUcIiJmYokjvy6eOeec
        p/By4Cdnq20yzn5d13V91B6He7Xg7PGbruu6Pm4vB35cDREREzEOdzMzS7ay/8dnqp058JOznHPOc3iJ
        f5iZWa6V/S/HPxARMRPj5h72clc555wP7mX/y6erna6Vc855Bo/D3czMkq3sf6nazAOd67qu64P2enN/
        ad7yDV3XdX3AXva9dKraqf0vn+acc57Dy/6XTtXnaZxzzhN42fej+oyIiIlYb+6LioiIQ7Ps+9Gb+390
        KhjPm9R1XdfH7HG4m5lZspV929W236hs3lPXdV0fr9eb+7/xnq7ruj5QL9+rvyEiYiaWfdtvhM3jnHOe
        wMv3turz1uuVnHPOM/h0c49tvV45ua7ruj5uL/NvtW5S13VdH7TXw93MzHLN4W5mlnAOdzOzhFsf7vu2
        6vcazjnn47ubu5lZwsXhPp/3Qc455wk8/kdM1do455xn8PZZJp7beT+x/feSuq7r+ph9dXPfwTZd13V9
        yL7+5o6IiGnYbu5mZpZq3c29fq/hnHOewKebe32exjnnfHSv/3/u3XNlO/t1Xdf1UXtZvIGIiMOzu7nH
        95qVv6nruq6P293cERETst3c23mPiIhJ6OaOiJiQ3c19+l7DOed8eF/d3N/cF+Scc57BfXNHREzIMp/3
        iIiYh765c855Qu9v7m2cc86H98U39/7s13Vd18fs7eZuZmapNt3cY/PZzznnfHR3czczS7h6uG93Kc7+
        teu6rusjdjd3M7OEK915f6pK5fYpXdd1fdy+6829vb2cruvL6fpe7O2be6uVnHPOx/cyPU/r3tB1XdeH
        7e2zTDzv785+zjnnQ/vq5n5qHuec8+E9bu7tvN9fK+ec8wTebu5mZpZqO7+517P/VHNd13V90L7Lzb29
        t5yu68vp+t7scbgvzv6euq7r+nh94+be3ltO1/XldH0v93pzb29sn+acc57Dp5t7e+acc57D2zf3et4j
        ImIWlnbGIyJiJrZv7t15zznnfHxf3dxbnXx/57qu6/pw3Td3RMSELPPZP7Ge/RtF13VdH6775s455wl9
        fXNv45xznsB9c0dETMi4uZuZWbKtvrmf7k792XVd1/Uxu5u7mVnClfm8R0TEPHRzNzNLuHZzPxMP22fa
        ed+5ruu6PmRf3dzr8y7TdX05Xd/rvR7u80mPiIg5WOazHxER89DNHRExIfubexvnnPPh3c0dETEh283d
        zMxSbXVzP3OgO/U713Vd18frbu5mZgkXh3s97xERMQ/d3M3MEq6/uZ/lnHOew3e5ubffltN1fTld35u9
        3dzbeY+IiEm4cXM/sPhroOvL6bq+3F7rbu6IiAk53dzbM+ec8xzu5o6ImJDlwFY1RERMRDd3RMSEnG/u
        8Xy2+tkD2yG6ruv6uN3NHRExIdvNfXn2b1LXdV0fqq9u7vEG55zzHD7f3Puzn3PO+eBemiEiYiaW1Xm/
        c7quL6frg/T+5n6usb7RXNd1XR+yxzf3Wvuzv76n67quD9vbzX159m9Q13VdH6uXA1v1t8b2Xl90Xdf1
        Aft0c29vcM45z+HzzT2e2zjnnA/v9V+ohiEiYh6WavM455yn8F1v7ucO7iy6ruv6SL19c//Os59zzvmI
        Xg/3Vivr2b9RdF3X9eH6bt/ce+q6rusD9vXN/eD2ec455zncN3fOOU/ocbi38x4REdNw/ubes/87oOu6
        rg/Y3dwRERNy+ubeng9srX/TdV3Xx+1u7oiICVmadWf/+QPdG7qu6/qI3c0dETEhSz3jz9fnaZxzzkd3
        N3dExIRs39ynkx4REXNwdXNf/qbruq6P2svB+RvNwe6NcF3XdX3YHv9CdfVb5YVF0XVd1wfr8c1959nP
        Oed8cG8393bqIyJiEq7+a5kLcd5P32uq67qu68N2N3dExIQs83mPiIh5uMvNvf2m67quj9vLwa2phsxv
        1Kjruq6P2jdu7q3+O38TdF3X9b3c2zf3dvYjImISTjf39sw55zyHu7kjIiZk/Reqi4qIiEPTzR0RMSH7
        m/vFlR/qXNd1XR+uf8fNvU3XdV0fs7ebezvvg/PZv5O6ruv6QH3Hzb3V5d8EXdd1faS+vrn3Zz/nnPOh
        vTQLrr/XrN/QdV3XR+xxc2/nPSIipmG7uV/sTn3OOefDu5s7ImJCTjf3+tzO++ptuq7r+ph9x8291Z1/
        AXRd1/Wxemm/9ed9T13XdX3EXjZr/3dA13VdH7VPN/dg/71mu3tP13VdH623m/ul6ZlzznkK727uiIiY
        hf3NHRERk3B1c790aP29hnPO+dju5o6ImJAlzvjuuZ79U9F1XdcH7W7uiIgJub65t7U6Tdd1XR+zu7kj
        IiZkvblP5/2Cuq7r+ph9urm3yjnnPIe3b+5h0zjnnI/vpdnB9sw55zyFdzf3xv7s13Vd18fspTvvL3PO
        Oc/hvrlzznlCb9/cLyMiYiaWsN3Pfl3XdX3Uvr65H+5Ofc4550P76pt7O+/n33b+HdB1XddH6nFzX579
        PXVd1/XhevvmXtfem9a5ruu6Plr3zZ1zzhN6vblvrQ5+zjnnGbwc2rrczvsFdV3X9VF79829X/93QF9O
        1/Xl9L3UV/+1TDvve+q6ruuj9umbezzPZz/nnPPRvX1zf2t65pxznsJLPG+e9z11Xdf1EXt/c0dExCSs
        N/f23E59zjnn47ubOyJiQpawOO8RETEP3dwREROy3tyrtbVTf3Jd13V9zO7mjoiYkHFzNzOzZFvd3OOB
        c855Dl/c3GvdZbquL6fre7WX+bxHRMQ8XNzczcxs/E0393qrv8I55zyH15t7e15O1/XldH2EXqq18/5K
        8566ruv6iH3HN/crO/8I6Pou03V9ub3Vp5v7v/N3QNd1XR+ll7D12Y+IiBm4cXNHRMQcbDf3tlo555yP
        7+ub+5HVqb/dua7ruj5g72/uZmaWZHFz7877K8176rqu68N1N3czs4Qr06m/3c7+Wqe/A7qu6/qo3c3d
        zCzh2s39anfqc845H97d3M3MEq6/uc+M7zWbRdd1XR+qTzf39hvnnPMcvtvNHRERB2cJm096RETMwfnm
        3p4555yn8P7mfpVzznkO980dETEh2829nfeIiJiEq2/u9ZlzznkKX9/c2zjnnCfwcnirPje23/qi67qu
        D9jj5m5mZsk239zj4RrnnPMc7uZuZpZwpTvvN6nruq4P28uR7WvdYc855zyDt2/u7Xk67znnnI/uq5v7
        Drbpuq7rQ/ZypJ70/Xnfiq7ruj5ubzf3/rxfTtf15XR9T/fp5j69wTnnPIX3N3czM0uy+XCfznvOOecZ
        3M3dzCzhypGtyY7Geb/yt3Vd1/Vxu5u7mVnCxeHezvv4C9C8p67ruj5gd3M3M0u4+Oa+ed5zzjkf3qeb
        e3uet3Zd13V9xD5/c+/Z/x3QdV3XB+yl2Xzqr6nruq6P231z55zzhF66876Nc8758L7bN3dERByc7Zv7
        24iImImrb+71mXPOeQpf39zbpjc66rqu68P1+Bequ/6GiIjjMm7u/8/Zr+u6ro/Yy5GtVb3evXFd13Vd
        H7fv/s2dc8750N6+ubezHxERk7Ac3b6+OvJn76nruq6P1zdv7vG9Zpe/ALqu6/pYfXVzvz6veU9d13V9
        sO6bOyJiQrabu5mZpVr779ynm3w77yfXdV3Xh+1u7mZmCbc63Nt5v5yu68vp+l7vbu5mZgn3f9X9GEgh
        P0+BAAAAAElFTkSuQmCC
</value>
  </data>
</root>